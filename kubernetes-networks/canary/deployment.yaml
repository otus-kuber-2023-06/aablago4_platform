apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-canary
spec:
  replicas: 3
  selector:
    matchLabels:
      app: web-canary
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 100%
  template:
    metadata:
      name: web-canary # Название Pod
      labels: # Метки в формате key: value
        app: web-canary
    spec: # Описание Pod
      containers: # Описание контейнеров внутри Pod
        - name: web-canary # Название контейнера
          image: aablago4/nginx_custom:1.0 # Образ из которого создается контейнер
          volumeMounts:
            - name: app
              mountPath: /app
          readinessProbe:
            httpGet:
              path: /index.html
              port: 8000
          livenessProbe:
            tcpSocket:
              port: 8000
      volumes:
        - name: app
          emptyDir: { }
      initContainers:
        - name: init-web01
          image: busybox:1.31
          command: [ 'sh', '-c', 'wget -O- https://tinyurl.com/otus-k8s-intro | sh' ]
          volumeMounts:
            - name: app
              mountPath: /app
---
apiVersion: v1
kind: Service
metadata:
  name: svc-canary
spec:
  selector:
    app: web-canary
  type: ClusterIP
  clusterIP: None
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8000
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: web-canary
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/canary: "true"
    nginx.ingress.kubernetes.io/canary-weight: "50"
    nginx.ingress.kubernetes.io/rewrite-target: /$2
spec:
  rules:
    - host: ingress.local
      http:
        paths:
           - path: /web(/|$)(.*)
             pathType: Prefix
             backend:
               service:
                 name: svc-canary
                 port:
                   number: 8000
